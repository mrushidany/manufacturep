<?php

namespace App\Http\Controllers\Measurements;

use App\Models\Basic_unit;
use App\Models\Product;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\DB;
use Yajra\DataTables\Facades\DataTables;


class Basic_unitsController extends Controller
{

    public function __construct()
    {
        $this->middleware('auth');
    }
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index(Request $request)
    {
        return view('measurements.basic_list');
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        $data = ['units'=> new Basic_unit];
      return view('measurements.autogenerated.basic_form')->with($data);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request, Basic_unit $measurement_unit)
    {
        $measurement_unit -> name = $request->name;
        $measurement_unit -> symbol = $request->symbol;
        $measurement_unit->save();

        return redirect()->route('basic.basic_units_list.index');

    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $units = Basic_unit::find($id);

        if($units != null){
            $data = ['units' => $units];

            return view('measurements.autogenerated.basic_form')->with($data);
        }else{
            return redirect()->back();
        }
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request,$id)
    {
        $units = Basic_unit::find($id);
        $units->name = $request->name;
        $units->symbol = $request->symbol;
        $units->save();


        return redirect()->route('basic.basic_units_list.index');

    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        Basic_unit::destroy($id);
        return redirect()->route('basic.basic_units_list.index');

    }

    public function datatable(){
            $measurements = DB::table('basic_units')
                                ->select('basic_units.*')
                                ->get();
            return DataTables::of($measurements)
                ->addColumn('action',function ($measurements){
                    $e  = '';
                    $e .= '<a href="javascript:edit(\'' . route('basic.basic_units_list.edit', $measurements->id) . '\')" class=" btn btn-xs btn-info"><i class="fa fa-edit"></i>Edit</a>';
                    $e .= '<a href="javascript:destroy(\'' . route('basic.basic_units_list.destroy', $measurements->id) . '\')" class=" btn btn-xs btn-danger"><i class="fa fa-trash"></i>Delete</a>';
                    return '<nobr>' . $e . '</nobr>';
                })
                ->make(true);

    }
}
