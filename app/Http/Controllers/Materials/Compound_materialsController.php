<?php

namespace App\Http\Controllers\Materials;

use App\Models\Basic_material;
use App\Models\Basic_unit;
use App\Models\Compound_basic_material;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Yajra\DataTables\Facades\DataTables;
use Illuminate\Support\Facades\DB;


class Compound_materialsController extends Controller
{
    public function __construct(){
        $this->middleware('auth');
    }
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        return view('materials.basic_compound_materials');
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        $data = [
            'materials' => Basic_material::all(),
            'units' => Basic_unit::all()
        ];
        return view('materials.autogenerated.compound_materials_form')->with($data);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request,Compound_basic_material $compound_basic_material)
    {
        $compound_basic_material->name = $request->name;
        $compound_basic_material->description = $request->description;
        $compound_basic_material->basic_material_id = $request->basic_material_id;
        $compound_basic_material->unit_id = $request->unit_id;
        $compound_basic_material->save();

        return redirect()->route('compound_materials.index');
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {

        $compounds = Compound_basic_material::find($id);

        if($compounds != null){
            $data = [
                'compounds' => $compounds,
                'materials' => Basic_material::all(),
                'units' => Basic_unit::all()
            ];
            return view('materials.autogenerated.compound_materials_form')->with($data);
        }else{
            return redirect()->back();
        }
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        $compound_material = Compound_basic_material::find($id);
        $compound_material->name = $request->name;
        $compound_material->description = $request->description;
        $compound_material->basic_material_id = $request->basic_material_id;
        $compound_material->unit_id = $request->unit_id;
        $compound_material->save();

        return redirect()->route('compound_materials.index');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        Compound_basic_material::destroy($id);

        return redirect()->route('compound_materials.index');
    }

    public function basic_compound_materials_datatable()
    {
        $compound_materials = DB::table('compound_basic_materials')
                                    ->leftJoin('basic_materials','basic_materials.id','=','compound_basic_materials.basic_material_id')
                                    ->leftJoin('basic_units','basic_units.id','=','compound_basic_materials.unit_id')
                                    ->select(
                                        'compound_basic_materials.id',
                                        'compound_basic_materials.name as name',
                                        'compound_basic_materials.description as description',
                                        'basic_materials.name as material',
                                        'basic_units.name as unit'

                                    )
                                    ->get();

        return DataTables::of($compound_materials)
                            ->addColumn('action',function ($materials){
                                $e  = '';
                                $e .= '<a href="javascript:edit(\'' . route('compound_materials.edit', $materials->id) . '\')" class=" btn btn-xs btn-info"><i class="fa fa-edit"></i>Edit</a>';
                                $e .= '<a href="javascript:destroy(\'' . route('compound_materials.destroy', $materials->id) . '\')" class=" btn btn-xs btn-danger"><i class="fa fa-trash"></i>Delete</a>';
                                return '<nobr>' . $e . '</nobr>';
                            })
                            ->rawColumns(['name','action'])
                            ->make(true);

    }
}
