<?php

namespace App\Http\Controllers\Materials;

use App\Models\Basic_material;
use App\Models\Basic_unit;
use App\Models\Product;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\DB;
use Yajra\DataTables\Facades\DataTables;

class Basic_materialsController extends Controller
{
    public function __construct()
    {
        $this->middleware('auth');
    }
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        return view('materials.basic_materials');
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        $data = ['materials' => new Basic_material,'units' => Basic_unit::all()];
        return view('materials.autogenerated.basic_materials_form')->with($data);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @return \Illuminate\Http\Response
     */
    public function store(Request $request, Basic_material $material)
    {
        $material->name = $request->name;
        $material->description = $request->description;
        $material->unit_id = $request->unit_id;
        $material->save();

        return redirect()->route('basic_materials.index');

    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        $materials = Basic_material::find($id);

        if($materials != null){
            $data = ['materials' => $materials,'units' => Basic_unit::all()];

            return view('materials.autogenerated.basic_materials_form')->with($data);
        }else{
            return redirect()->back();
        }
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function update(Request $request, $id)
    {
        $material = Basic_material::find($id);
        $material->name = $request->name;
        $material->description = $request->description;
        $material->unit_id = $request->unit_id;
        $material->save();


        return redirect()->route('basic_materials.index');

    }

    public function datatable(){

        $materials = DB::table('basic_materials')
            ->leftJoin('basic_units','basic_materials.unit_id','=','basic_units.id')
            ->select(
               'basic_materials.id',
                'basic_materials.name as name',
                'basic_materials.description as description',
                'basic_units.name as unit_name'
            )
            ->get();
        return DataTables::of($materials)
            ->addColumn('action',function ($materials){
                $e  = '';
                $e .= '<a href="javascript:edit(\'' . route('basic_materials.edit', $materials->id) . '\')" class=" btn btn-xs btn-info"><i class="fa fa-edit"></i>Edit</a>';
                $e .= '<a href="javascript:destroy(\'' . route('basic_materials.destroy', $materials->id) . '\')" class=" btn btn-xs btn-danger"><i class="fa fa-trash"></i>Delete</a>';
                return '<nobr>' . $e . '</nobr>';
            })
            ->make(true);
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {

        Basic_material::destroy($id);

        return redirect()->route('basic_materials.index');
    }


}
